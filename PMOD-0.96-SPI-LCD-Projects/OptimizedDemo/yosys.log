
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Parsing `demo.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: demo.v
Parsing Verilog input from `demo.v' to AST representation.
Generating RTLIL representation for module `\cmd_bram'.
Generating RTLIL representation for module `\param_bram'.
Generating RTLIL representation for module `\demo'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json demo.json -blif demo.blif' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   1 design levels: demo                
root of   0 design levels: param_bram          
root of   0 design levels: cmd_bram            
Automatically selected demo as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \demo
Used module:     \param_bram
Used module:     \cmd_bram

2.2.3. Analyzing design hierarchy..
Top module:  \demo
Used module:     \param_bram
Used module:     \cmd_bram
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 18 switch rules as full_case in process $proc$demo.v:168$369 in module demo.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\demo.$proc$demo.v:118$400'.
  Set init value: \state = 6'000000
  Set init value: \delay = 16'0000000000000000
  Set init value: \rst = 1'1
  Set init value: \scl = 1'1
  Set init value: \dc = 1'1
  Set init value: \mosi = 1'1
  Set init value: \cs = 1'1
  Set init value: \data = 8'00000000
  Set init value: \bit_counter = 3'111
  Set init value: \pixel_data = 16'0000000000000000
  Set init value: \pixel_bit_counter = 4'1111
  Set init value: \cb_rd_en = 1'0
  Set init value: \cb_rd_addr = 5'00000
  Set init value: \pb_rd_en = 1'0
  Set init value: \pb_rd_addr = 7'0000000
  Set init value: \params_left = 14'00000000000000
Found init rule in `\param_bram.$proc$param_bram.v:14$230'.
  Set init value: \valid_out = 1'0
Found init rule in `\cmd_bram.$proc$cmd_bram.v:17$47'.
  Set init value: \valid_out = 1'0

2.3.4. Executing PROC_ARST pass (detect async resets in processes).

2.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\demo.$proc$demo.v:118$400'.
     1/16: $1\params_left[13:0]
     2/16: $1\pb_rd_addr[6:0]
     3/16: $1\pb_rd_en[0:0]
     4/16: $1\cb_rd_addr[4:0]
     5/16: $1\cb_rd_en[0:0]
     6/16: $1\pixel_bit_counter[3:0]
     7/16: $1\pixel_data[15:0]
     8/16: $1\bit_counter[2:0]
     9/16: $1\data[7:0]
    10/16: $1\cs[0:0]
    11/16: $1\mosi[0:0]
    12/16: $1\dc[0:0]
    13/16: $1\scl[0:0]
    14/16: $1\rst[0:0]
    15/16: $1\delay[15:0]
    16/16: $1\state[5:0]
Creating decoders for process `\demo.$proc$demo.v:168$369'.
     1/16: $0\pixel_data[15:0] [15:8]
     2/16: $0\pixel_data[15:0] [7:0]
     3/16: $0\pb_rd_addr[6:0]
     4/16: $0\pb_rd_en[0:0]
     5/16: $0\cb_rd_addr[4:0]
     6/16: $0\cb_rd_en[0:0]
     7/16: $0\pixel_bit_counter[3:0]
     8/16: $0\params_left[13:0]
     9/16: $0\bit_counter[2:0]
    10/16: $0\data[7:0]
    11/16: $0\cs[0:0]
    12/16: $0\mosi[0:0]
    13/16: $0\dc[0:0]
    14/16: $0\rst[0:0]
    15/16: $0\delay[15:0]
    16/16: $0\state[5:0]
Creating decoders for process `\demo.$proc$demo.v:157$367'.
     1/1: $0\scl[0:0]
Creating decoders for process `\param_bram.$proc$param_bram.v:14$230'.
     1/137: $1\valid_out[0:0]
     2/137: $0$memwr$\param_memory$param_bram.v:82$159_DATA[7:0]$366
     3/137: $0$memwr$\param_memory$param_bram.v:82$159_ADDR[31:0]$365
     4/137: $0$memwr$\param_memory$param_bram.v:81$158_DATA[7:0]$364
     5/137: $0$memwr$\param_memory$param_bram.v:81$158_ADDR[31:0]$363
     6/137: $0$memwr$\param_memory$param_bram.v:80$157_DATA[7:0]$362
     7/137: $0$memwr$\param_memory$param_bram.v:80$157_ADDR[31:0]$361
     8/137: $0$memwr$\param_memory$param_bram.v:79$156_DATA[7:0]$360
     9/137: $0$memwr$\param_memory$param_bram.v:79$156_ADDR[31:0]$359
    10/137: $0$memwr$\param_memory$param_bram.v:78$155_DATA[7:0]$358
    11/137: $0$memwr$\param_memory$param_bram.v:78$155_ADDR[31:0]$357
    12/137: $0$memwr$\param_memory$param_bram.v:77$154_DATA[7:0]$356
    13/137: $0$memwr$\param_memory$param_bram.v:77$154_ADDR[31:0]$355
    14/137: $0$memwr$\param_memory$param_bram.v:76$153_DATA[7:0]$354
    15/137: $0$memwr$\param_memory$param_bram.v:76$153_ADDR[31:0]$353
    16/137: $0$memwr$\param_memory$param_bram.v:75$152_DATA[7:0]$352
    17/137: $0$memwr$\param_memory$param_bram.v:75$152_ADDR[31:0]$351
    18/137: $0$memwr$\param_memory$param_bram.v:74$151_DATA[7:0]$350
    19/137: $0$memwr$\param_memory$param_bram.v:74$151_ADDR[31:0]$349
    20/137: $0$memwr$\param_memory$param_bram.v:73$150_DATA[7:0]$348
    21/137: $0$memwr$\param_memory$param_bram.v:73$150_ADDR[31:0]$347
    22/137: $0$memwr$\param_memory$param_bram.v:72$149_DATA[7:0]$346
    23/137: $0$memwr$\param_memory$param_bram.v:72$149_ADDR[31:0]$345
    24/137: $0$memwr$\param_memory$param_bram.v:71$148_DATA[7:0]$344
    25/137: $0$memwr$\param_memory$param_bram.v:71$148_ADDR[31:0]$343
    26/137: $0$memwr$\param_memory$param_bram.v:70$147_DATA[7:0]$342
    27/137: $0$memwr$\param_memory$param_bram.v:70$147_ADDR[31:0]$341
    28/137: $0$memwr$\param_memory$param_bram.v:69$146_DATA[7:0]$340
    29/137: $0$memwr$\param_memory$param_bram.v:69$146_ADDR[31:0]$339
    30/137: $0$memwr$\param_memory$param_bram.v:68$145_DATA[7:0]$338
    31/137: $0$memwr$\param_memory$param_bram.v:68$145_ADDR[31:0]$337
    32/137: $0$memwr$\param_memory$param_bram.v:67$144_DATA[7:0]$336
    33/137: $0$memwr$\param_memory$param_bram.v:67$144_ADDR[31:0]$335
    34/137: $0$memwr$\param_memory$param_bram.v:66$143_DATA[7:0]$334
    35/137: $0$memwr$\param_memory$param_bram.v:66$143_ADDR[31:0]$333
    36/137: $0$memwr$\param_memory$param_bram.v:65$142_DATA[7:0]$332
    37/137: $0$memwr$\param_memory$param_bram.v:65$142_ADDR[31:0]$331
    38/137: $0$memwr$\param_memory$param_bram.v:64$141_DATA[7:0]$330
    39/137: $0$memwr$\param_memory$param_bram.v:64$141_ADDR[31:0]$329
    40/137: $0$memwr$\param_memory$param_bram.v:63$140_DATA[7:0]$328
    41/137: $0$memwr$\param_memory$param_bram.v:63$140_ADDR[31:0]$327
    42/137: $0$memwr$\param_memory$param_bram.v:62$139_DATA[7:0]$326
    43/137: $0$memwr$\param_memory$param_bram.v:62$139_ADDR[31:0]$325
    44/137: $0$memwr$\param_memory$param_bram.v:61$138_DATA[7:0]$324
    45/137: $0$memwr$\param_memory$param_bram.v:61$138_ADDR[31:0]$323
    46/137: $0$memwr$\param_memory$param_bram.v:60$137_DATA[7:0]$322
    47/137: $0$memwr$\param_memory$param_bram.v:60$137_ADDR[31:0]$321
    48/137: $0$memwr$\param_memory$param_bram.v:59$136_DATA[7:0]$320
    49/137: $0$memwr$\param_memory$param_bram.v:59$136_ADDR[31:0]$319
    50/137: $0$memwr$\param_memory$param_bram.v:58$135_DATA[7:0]$318
    51/137: $0$memwr$\param_memory$param_bram.v:58$135_ADDR[31:0]$317
    52/137: $0$memwr$\param_memory$param_bram.v:57$134_DATA[7:0]$316
    53/137: $0$memwr$\param_memory$param_bram.v:57$134_ADDR[31:0]$315
    54/137: $0$memwr$\param_memory$param_bram.v:56$133_DATA[7:0]$314
    55/137: $0$memwr$\param_memory$param_bram.v:56$133_ADDR[31:0]$313
    56/137: $0$memwr$\param_memory$param_bram.v:55$132_DATA[7:0]$312
    57/137: $0$memwr$\param_memory$param_bram.v:55$132_ADDR[31:0]$311
    58/137: $0$memwr$\param_memory$param_bram.v:54$131_DATA[7:0]$310
    59/137: $0$memwr$\param_memory$param_bram.v:54$131_ADDR[31:0]$309
    60/137: $0$memwr$\param_memory$param_bram.v:53$130_DATA[7:0]$308
    61/137: $0$memwr$\param_memory$param_bram.v:53$130_ADDR[31:0]$307
    62/137: $0$memwr$\param_memory$param_bram.v:52$129_DATA[7:0]$306
    63/137: $0$memwr$\param_memory$param_bram.v:52$129_ADDR[31:0]$305
    64/137: $0$memwr$\param_memory$param_bram.v:51$128_DATA[7:0]$304
    65/137: $0$memwr$\param_memory$param_bram.v:51$128_ADDR[31:0]$303
    66/137: $0$memwr$\param_memory$param_bram.v:50$127_DATA[7:0]$302
    67/137: $0$memwr$\param_memory$param_bram.v:50$127_ADDR[31:0]$301
    68/137: $0$memwr$\param_memory$param_bram.v:49$126_DATA[7:0]$300
    69/137: $0$memwr$\param_memory$param_bram.v:49$126_ADDR[31:0]$299
    70/137: $0$memwr$\param_memory$param_bram.v:48$125_DATA[7:0]$298
    71/137: $0$memwr$\param_memory$param_bram.v:48$125_ADDR[31:0]$297
    72/137: $0$memwr$\param_memory$param_bram.v:47$124_DATA[7:0]$296
    73/137: $0$memwr$\param_memory$param_bram.v:47$124_ADDR[31:0]$295
    74/137: $0$memwr$\param_memory$param_bram.v:46$123_DATA[7:0]$294
    75/137: $0$memwr$\param_memory$param_bram.v:46$123_ADDR[31:0]$293
    76/137: $0$memwr$\param_memory$param_bram.v:45$122_DATA[7:0]$292
    77/137: $0$memwr$\param_memory$param_bram.v:45$122_ADDR[31:0]$291
    78/137: $0$memwr$\param_memory$param_bram.v:44$121_DATA[7:0]$290
    79/137: $0$memwr$\param_memory$param_bram.v:44$121_ADDR[31:0]$289
    80/137: $0$memwr$\param_memory$param_bram.v:43$120_DATA[7:0]$288
    81/137: $0$memwr$\param_memory$param_bram.v:43$120_ADDR[31:0]$287
    82/137: $0$memwr$\param_memory$param_bram.v:42$119_DATA[7:0]$286
    83/137: $0$memwr$\param_memory$param_bram.v:42$119_ADDR[31:0]$285
    84/137: $0$memwr$\param_memory$param_bram.v:41$118_DATA[7:0]$284
    85/137: $0$memwr$\param_memory$param_bram.v:41$118_ADDR[31:0]$283
    86/137: $0$memwr$\param_memory$param_bram.v:40$117_DATA[7:0]$282
    87/137: $0$memwr$\param_memory$param_bram.v:40$117_ADDR[31:0]$281
    88/137: $0$memwr$\param_memory$param_bram.v:39$116_DATA[7:0]$280
    89/137: $0$memwr$\param_memory$param_bram.v:39$116_ADDR[31:0]$279
    90/137: $0$memwr$\param_memory$param_bram.v:38$115_DATA[7:0]$278
    91/137: $0$memwr$\param_memory$param_bram.v:38$115_ADDR[31:0]$277
    92/137: $0$memwr$\param_memory$param_bram.v:37$114_DATA[7:0]$276
    93/137: $0$memwr$\param_memory$param_bram.v:37$114_ADDR[31:0]$275
    94/137: $0$memwr$\param_memory$param_bram.v:36$113_DATA[7:0]$274
    95/137: $0$memwr$\param_memory$param_bram.v:36$113_ADDR[31:0]$273
    96/137: $0$memwr$\param_memory$param_bram.v:35$112_DATA[7:0]$272
    97/137: $0$memwr$\param_memory$param_bram.v:35$112_ADDR[31:0]$271
    98/137: $0$memwr$\param_memory$param_bram.v:34$111_DATA[7:0]$270
    99/137: $0$memwr$\param_memory$param_bram.v:34$111_ADDR[31:0]$269
   100/137: $0$memwr$\param_memory$param_bram.v:33$110_DATA[7:0]$268
   101/137: $0$memwr$\param_memory$param_bram.v:33$110_ADDR[31:0]$267
   102/137: $0$memwr$\param_memory$param_bram.v:32$109_DATA[7:0]$266
   103/137: $0$memwr$\param_memory$param_bram.v:32$109_ADDR[31:0]$265
   104/137: $0$memwr$\param_memory$param_bram.v:31$108_DATA[7:0]$264
   105/137: $0$memwr$\param_memory$param_bram.v:31$108_ADDR[31:0]$263
   106/137: $0$memwr$\param_memory$param_bram.v:30$107_DATA[7:0]$262
   107/137: $0$memwr$\param_memory$param_bram.v:30$107_ADDR[31:0]$261
   108/137: $0$memwr$\param_memory$param_bram.v:29$106_DATA[7:0]$260
   109/137: $0$memwr$\param_memory$param_bram.v:29$106_ADDR[31:0]$259
   110/137: $0$memwr$\param_memory$param_bram.v:28$105_DATA[7:0]$258
   111/137: $0$memwr$\param_memory$param_bram.v:28$105_ADDR[31:0]$257
   112/137: $0$memwr$\param_memory$param_bram.v:27$104_DATA[7:0]$256
   113/137: $0$memwr$\param_memory$param_bram.v:27$104_ADDR[31:0]$255
   114/137: $0$memwr$\param_memory$param_bram.v:26$103_DATA[7:0]$254
   115/137: $0$memwr$\param_memory$param_bram.v:26$103_ADDR[31:0]$253
   116/137: $0$memwr$\param_memory$param_bram.v:25$102_DATA[7:0]$252
   117/137: $0$memwr$\param_memory$param_bram.v:25$102_ADDR[31:0]$251
   118/137: $0$memwr$\param_memory$param_bram.v:24$101_DATA[7:0]$250
   119/137: $0$memwr$\param_memory$param_bram.v:24$101_ADDR[31:0]$249
   120/137: $0$memwr$\param_memory$param_bram.v:23$100_DATA[7:0]$248
   121/137: $0$memwr$\param_memory$param_bram.v:23$100_ADDR[31:0]$247
   122/137: $0$memwr$\param_memory$param_bram.v:22$99_DATA[7:0]$246
   123/137: $0$memwr$\param_memory$param_bram.v:22$99_ADDR[31:0]$245
   124/137: $0$memwr$\param_memory$param_bram.v:21$98_DATA[7:0]$244
   125/137: $0$memwr$\param_memory$param_bram.v:21$98_ADDR[31:0]$243
   126/137: $0$memwr$\param_memory$param_bram.v:20$97_DATA[7:0]$242
   127/137: $0$memwr$\param_memory$param_bram.v:20$97_ADDR[31:0]$241
   128/137: $0$memwr$\param_memory$param_bram.v:19$96_DATA[7:0]$240
   129/137: $0$memwr$\param_memory$param_bram.v:19$96_ADDR[31:0]$239
   130/137: $0$memwr$\param_memory$param_bram.v:18$95_DATA[7:0]$231
   131/137: $0$memwr$\param_memory$param_bram.v:18$95_ADDR[31:0]$237
   132/137: $0$memwr$\param_memory$param_bram.v:17$94_DATA[7:0]$236
   133/137: $0$memwr$\param_memory$param_bram.v:17$94_ADDR[31:0]$235
   134/137: $0$memwr$\param_memory$param_bram.v:16$93_DATA[7:0]$234
   135/137: $0$memwr$\param_memory$param_bram.v:16$93_ADDR[31:0]$233
   136/137: $0$memwr$\param_memory$param_bram.v:15$92_DATA[7:0]$238
   137/137: $0$memwr$\param_memory$param_bram.v:15$92_ADDR[31:0]$232
Creating decoders for process `\param_bram.$proc$param_bram.v:86$160'.
     1/2: $0\valid_out[0:0]
     2/2: $0\data_out[7:0]
Creating decoders for process `\cmd_bram.$proc$cmd_bram.v:17$47'.
     1/45: $1\valid_out[0:0]
     2/45: $0$memwr$\cmd_memory$cmd_bram.v:40$22_DATA[7:0]$91
     3/45: $0$memwr$\cmd_memory$cmd_bram.v:40$22_ADDR[31:0]$90
     4/45: $0$memwr$\cmd_memory$cmd_bram.v:39$21_DATA[7:0]$89
     5/45: $0$memwr$\cmd_memory$cmd_bram.v:39$21_ADDR[31:0]$88
     6/45: $0$memwr$\cmd_memory$cmd_bram.v:38$20_DATA[7:0]$87
     7/45: $0$memwr$\cmd_memory$cmd_bram.v:38$20_ADDR[31:0]$86
     8/45: $0$memwr$\cmd_memory$cmd_bram.v:37$19_DATA[7:0]$85
     9/45: $0$memwr$\cmd_memory$cmd_bram.v:37$19_ADDR[31:0]$84
    10/45: $0$memwr$\cmd_memory$cmd_bram.v:36$18_DATA[7:0]$83
    11/45: $0$memwr$\cmd_memory$cmd_bram.v:36$18_ADDR[31:0]$82
    12/45: $0$memwr$\cmd_memory$cmd_bram.v:35$17_DATA[7:0]$81
    13/45: $0$memwr$\cmd_memory$cmd_bram.v:35$17_ADDR[31:0]$80
    14/45: $0$memwr$\cmd_memory$cmd_bram.v:34$16_DATA[7:0]$79
    15/45: $0$memwr$\cmd_memory$cmd_bram.v:34$16_ADDR[31:0]$78
    16/45: $0$memwr$\cmd_memory$cmd_bram.v:33$15_DATA[7:0]$77
    17/45: $0$memwr$\cmd_memory$cmd_bram.v:33$15_ADDR[31:0]$76
    18/45: $0$memwr$\cmd_memory$cmd_bram.v:32$14_DATA[7:0]$75
    19/45: $0$memwr$\cmd_memory$cmd_bram.v:32$14_ADDR[31:0]$74
    20/45: $0$memwr$\cmd_memory$cmd_bram.v:31$13_DATA[7:0]$73
    21/45: $0$memwr$\cmd_memory$cmd_bram.v:31$13_ADDR[31:0]$72
    22/45: $0$memwr$\cmd_memory$cmd_bram.v:30$12_DATA[7:0]$71
    23/45: $0$memwr$\cmd_memory$cmd_bram.v:30$12_ADDR[31:0]$70
    24/45: $0$memwr$\cmd_memory$cmd_bram.v:29$11_DATA[7:0]$69
    25/45: $0$memwr$\cmd_memory$cmd_bram.v:29$11_ADDR[31:0]$68
    26/45: $0$memwr$\cmd_memory$cmd_bram.v:28$10_DATA[7:0]$67
    27/45: $0$memwr$\cmd_memory$cmd_bram.v:28$10_ADDR[31:0]$66
    28/45: $0$memwr$\cmd_memory$cmd_bram.v:27$9_DATA[7:0]$65
    29/45: $0$memwr$\cmd_memory$cmd_bram.v:27$9_ADDR[31:0]$64
    30/45: $0$memwr$\cmd_memory$cmd_bram.v:26$8_DATA[7:0]$63
    31/45: $0$memwr$\cmd_memory$cmd_bram.v:26$8_ADDR[31:0]$62
    32/45: $0$memwr$\cmd_memory$cmd_bram.v:25$7_DATA[7:0]$61
    33/45: $0$memwr$\cmd_memory$cmd_bram.v:25$7_ADDR[31:0]$60
    34/45: $0$memwr$\cmd_memory$cmd_bram.v:24$6_DATA[7:0]$59
    35/45: $0$memwr$\cmd_memory$cmd_bram.v:24$6_ADDR[31:0]$58
    36/45: $0$memwr$\cmd_memory$cmd_bram.v:23$5_DATA[7:0]$57
    37/45: $0$memwr$\cmd_memory$cmd_bram.v:23$5_ADDR[31:0]$56
    38/45: $0$memwr$\cmd_memory$cmd_bram.v:22$4_DATA[7:0]$55
    39/45: $0$memwr$\cmd_memory$cmd_bram.v:22$4_ADDR[31:0]$54
    40/45: $0$memwr$\cmd_memory$cmd_bram.v:21$3_DATA[7:0]$53
    41/45: $0$memwr$\cmd_memory$cmd_bram.v:21$3_ADDR[31:0]$52
    42/45: $0$memwr$\cmd_memory$cmd_bram.v:20$2_DATA[7:0]$51
    43/45: $0$memwr$\cmd_memory$cmd_bram.v:20$2_ADDR[31:0]$50
    44/45: $0$memwr$\cmd_memory$cmd_bram.v:19$1_DATA[7:0]$49
    45/45: $0$memwr$\cmd_memory$cmd_bram.v:19$1_ADDR[31:0]$48
Creating decoders for process `\cmd_bram.$proc$cmd_bram.v:45$23'.
     1/2: $0\valid_out[0:0]
     2/2: $0\data_out[7:0]

2.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:18$95_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:15$92_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:16$93_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:16$93_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:17$94_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:17$94_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:18$95_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:15$92_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:19$96_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:19$96_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:20$97_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:20$97_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:21$98_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:21$98_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:22$99_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:22$99_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:23$100_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:23$100_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:24$101_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:24$101_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:25$102_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:25$102_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:26$103_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:26$103_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:27$104_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:27$104_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:28$105_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:28$105_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:29$106_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:29$106_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:30$107_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:30$107_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:31$108_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:31$108_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:32$109_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:32$109_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:33$110_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:33$110_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:34$111_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:34$111_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:35$112_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:35$112_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:36$113_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:36$113_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:37$114_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:37$114_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:38$115_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:38$115_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:39$116_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:39$116_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:40$117_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:40$117_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:41$118_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:41$118_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:42$119_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:42$119_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:43$120_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:43$120_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:44$121_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:44$121_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:45$122_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:45$122_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:46$123_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:46$123_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:47$124_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:47$124_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:48$125_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:48$125_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:49$126_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:49$126_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:50$127_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:50$127_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:51$128_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:51$128_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:52$129_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:52$129_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:53$130_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:53$130_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:54$131_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:54$131_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:55$132_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:55$132_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:56$133_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:56$133_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:57$134_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:57$134_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:58$135_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:58$135_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:59$136_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:59$136_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:60$137_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:60$137_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:61$138_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:61$138_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:62$139_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:62$139_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:63$140_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:63$140_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:64$141_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:64$141_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:65$142_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:65$142_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:66$143_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:66$143_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:67$144_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:67$144_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:68$145_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:68$145_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:69$146_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:69$146_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:70$147_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:70$147_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:71$148_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:71$148_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:72$149_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:72$149_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:73$150_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:73$150_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:74$151_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:74$151_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:75$152_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:75$152_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:76$153_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:76$153_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:77$154_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:77$154_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:78$155_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:78$155_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:79$156_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:79$156_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:80$157_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:80$157_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:81$158_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:81$158_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:82$159_ADDR' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\param_bram.$memwr$\param_memory$param_bram.v:82$159_DATA' from process `\param_bram.$proc$param_bram.v:14$230'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:19$1_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:19$1_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:20$2_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:20$2_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:21$3_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:21$3_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:22$4_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:22$4_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:23$5_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:23$5_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:24$6_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:24$6_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:25$7_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:25$7_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:26$8_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:26$8_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:27$9_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:27$9_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:28$10_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:28$10_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:29$11_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:29$11_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:30$12_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:30$12_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:31$13_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:31$13_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:32$14_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:32$14_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:33$15_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:33$15_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:34$16_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:34$16_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:35$17_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:35$17_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:36$18_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:36$18_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:37$19_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:37$19_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:38$20_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:38$20_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:39$21_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:39$21_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:40$22_ADDR' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.
No latch inferred for signal `\cmd_bram.$memwr$\cmd_memory$cmd_bram.v:40$22_DATA' from process `\cmd_bram.$proc$cmd_bram.v:17$47'.

2.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\demo.\state' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$700' with positive edge clock.
Creating register for signal `\demo.\delay' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$701' with positive edge clock.
Creating register for signal `\demo.\rst' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$702' with positive edge clock.
Creating register for signal `\demo.\dc' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$703' with positive edge clock.
Creating register for signal `\demo.\mosi' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$704' with positive edge clock.
Creating register for signal `\demo.\cs' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$705' with positive edge clock.
Creating register for signal `\demo.\data' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$706' with positive edge clock.
Creating register for signal `\demo.\bit_counter' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$707' with positive edge clock.
Creating register for signal `\demo.\pixel_data' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$708' with positive edge clock.
Creating register for signal `\demo.\pixel_bit_counter' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$709' with positive edge clock.
Creating register for signal `\demo.\cb_rd_en' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$710' with positive edge clock.
Creating register for signal `\demo.\cb_rd_addr' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$711' with positive edge clock.
Creating register for signal `\demo.\pb_rd_en' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$712' with positive edge clock.
Creating register for signal `\demo.\pb_rd_addr' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$713' with positive edge clock.
Creating register for signal `\demo.\params_left' using process `\demo.$proc$demo.v:168$369'.
  created $dff cell `$procdff$714' with positive edge clock.
Creating register for signal `\demo.\scl' using process `\demo.$proc$demo.v:157$367'.
  created $dff cell `$procdff$715' with positive edge clock.
Creating register for signal `\param_bram.\data_out' using process `\param_bram.$proc$param_bram.v:86$160'.
  created $dff cell `$procdff$716' with positive edge clock.
Creating register for signal `\param_bram.\valid_out' using process `\param_bram.$proc$param_bram.v:86$160'.
  created $dff cell `$procdff$717' with positive edge clock.
Creating register for signal `\cmd_bram.\data_out' using process `\cmd_bram.$proc$cmd_bram.v:45$23'.
  created $dff cell `$procdff$718' with positive edge clock.
Creating register for signal `\cmd_bram.\valid_out' using process `\cmd_bram.$proc$cmd_bram.v:45$23'.
  created $dff cell `$procdff$719' with positive edge clock.

2.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `demo.$proc$demo.v:118$400'.
Found and cleaned up 20 empty switches in `\demo.$proc$demo.v:168$369'.
Removing empty process `demo.$proc$demo.v:168$369'.
Removing empty process `demo.$proc$demo.v:157$367'.
Removing empty process `param_bram.$proc$param_bram.v:14$230'.
Found and cleaned up 1 empty switch in `\param_bram.$proc$param_bram.v:86$160'.
Removing empty process `param_bram.$proc$param_bram.v:86$160'.
Removing empty process `cmd_bram.$proc$cmd_bram.v:17$47'.
Found and cleaned up 1 empty switch in `\cmd_bram.$proc$cmd_bram.v:45$23'.
Removing empty process `cmd_bram.$proc$cmd_bram.v:45$23'.
Cleaned up 22 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template cmd_bram for cells of type cmd_bram.
Using template param_bram for cells of type param_bram.
<suppressed ~2 debug messages>
No more expansions possible.
Deleting now unused module param_bram.
Deleting now unused module cmd_bram.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~30 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 3 unused cells and 455 unused wires.
<suppressed ~4 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
checking module demo..
found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
    New ctrl vector for $pmux cell $procmux$497: { $procmux$513_CMP $auto$opt_reduce.cc:132:opt_mux$729 $auto$opt_reduce.cc:132:opt_mux$727 $auto$opt_reduce.cc:132:opt_mux$725 $auto$opt_reduce.cc:132:opt_mux$723 $auto$opt_reduce.cc:132:opt_mux$721 $eq$demo.v:333$377_Y }
    New ctrl vector for $pmux cell $procmux$548: { $procmux$553_CMP $auto$opt_reduce.cc:132:opt_mux$731 }
    New ctrl vector for $pmux cell $procmux$570: { $auto$opt_reduce.cc:132:opt_mux$733 $procmux$439_CMP }
    New ctrl vector for $pmux cell $procmux$656: $auto$opt_reduce.cc:132:opt_mux$735
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$720: { $procmux$499_CMP $procmux$500_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$722: { $procmux$501_CMP $procmux$502_CMP $procmux$503_CMP $procmux$506_CMP $procmux$510_CMP $procmux$512_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$724: { $procmux$504_CMP $procmux$505_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$726: { $procmux$507_CMP $procmux$508_CMP $procmux$509_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$728: { $procmux$511_CMP $procmux$514_CMP $procmux$515_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$730: { $procmux$443_CMP $procmux$554_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$734: { $eq$demo.v:333$377_Y $eq$demo.v:447$391_Y $procmux$501_CMP $procmux$499_CMP $procmux$500_CMP $procmux$502_CMP $procmux$503_CMP $procmux$504_CMP $procmux$505_CMP $procmux$506_CMP $procmux$507_CMP $procmux$508_CMP $procmux$509_CMP $procmux$510_CMP $procmux$511_CMP $procmux$512_CMP $procmux$513_CMP $procmux$514_CMP $procmux$515_CMP $procmux$660_CMP $procmux$661_CMP }
  Optimizing cells in module \demo.
Performed a total of 11 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:19$25 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:20$26 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:21$27 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:22$28 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:23$29 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:24$30 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:25$31 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:26$32 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:27$33 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:28$34 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:29$35 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:30$36 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:31$37 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:32$38 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:33$39 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:34$40 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:35$41 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:36$42 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:37$43 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:38$44 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:39$45 (cmd_bram_inst.cmd_memory).
Removed top 27 address bits (of 32) from memory init port demo.$techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:40$46 (cmd_bram_inst.cmd_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:15$162 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:16$163 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:17$164 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:18$165 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:19$166 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:20$167 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:21$168 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:22$169 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:23$170 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:24$171 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:25$172 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:26$173 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:27$174 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:28$175 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:29$176 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:30$177 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:31$178 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:32$179 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:33$180 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:34$181 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:35$182 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:36$183 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:37$184 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:38$185 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:39$186 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:40$187 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:41$188 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:42$189 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:43$190 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:44$191 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:45$192 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:46$193 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:47$194 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:48$195 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:49$196 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:50$197 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:51$198 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:52$199 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:53$200 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:54$201 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:55$202 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:56$203 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:57$204 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:58$205 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:59$206 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:60$207 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:61$208 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:62$209 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:63$210 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:64$211 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:65$212 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:66$213 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:67$214 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:68$215 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:69$216 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:70$217 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:71$218 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:72$219 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:73$220 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:74$221 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:75$222 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:76$223 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:77$224 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:78$225 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:79$226 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:80$227 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:81$228 (param_bram_inst.param_memory).
Removed top 25 address bits (of 32) from memory init port demo.$techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:82$229 (param_bram_inst.param_memory).
Removed top 1 bits (of 16) from port B of cell demo.$le$demo.v:238$372 ($le).
Removed top 1 bits (of 16) from port B of cell demo.$le$demo.v:215$370 ($le).
Removed top 15 bits (of 16) from port B of cell demo.$add$demo.v:217$371 ($add).
Removed top 4 bits (of 5) from port B of cell demo.$add$demo.v:272$375 ($add).
Removed top 2 bits (of 8) from port B of cell demo.$eq$demo.v:333$377 ($eq).
Removed top 3 bits (of 4) from port B of cell demo.$sub$demo.v:350$382 ($sub).
Removed top 2 bits (of 3) from port B of cell demo.$sub$demo.v:369$386 ($sub).
Removed top 3 bits (of 8) from port B of cell demo.$eq$demo.v:447$391 ($eq).
Removed top 6 bits (of 7) from port B of cell demo.$add$demo.v:519$396 ($add).
Removed top 13 bits (of 14) from port B of cell demo.$sub$demo.v:521$397 ($sub).
Removed top 1 bits (of 16) from port B of cell demo.$lt$demo.v:642$398 ($lt).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$409_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$439_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$443_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell demo.$procmux$457_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell demo.$procmux$474_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell demo.$procmux$486_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$499_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$500_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$501_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$502_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell demo.$procmux$553_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell demo.$procmux$590_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell demo.$procmux$572_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell demo.$procmux$589_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$596_CMP0 ($eq).
Removed top 4 bits (of 6) from mux cell demo.$procmux$612 ($mux).
Removed top 2 bits (of 6) from mux cell demo.$procmux$615 ($mux).
Removed top 3 bits (of 6) from mux cell demo.$procmux$621 ($mux).
Removed top 3 bits (of 6) from mux cell demo.$procmux$623 ($mux).
Removed top 5 bits (of 6) from mux cell demo.$procmux$627 ($mux).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$629_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell demo.$procmux$631 ($mux).
Removed top 2 bits (of 6) from port B of cell demo.$procmux$633_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell demo.$procmux$635 ($mux).
Removed top 4 bits (of 6) from mux cell demo.$procmux$639 ($mux).
Removed top 2 bits (of 6) from mux cell demo.$procmux$642 ($mux).
Removed top 4 bits (of 6) from mux cell demo.$procmux$646 ($mux).
Removed top 2 bits (of 6) from mux cell demo.$procmux$649 ($mux).
Removed top 5 bits (of 6) from mux cell demo.$procmux$656 ($mux).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$660_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell demo.$procmux$661_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell demo.$procmux$679 ($mux).
Removed top 4 bits (of 6) from wire demo.$procmux$612_Y.
Removed top 2 bits (of 6) from wire demo.$procmux$615_Y.
Removed top 3 bits (of 6) from wire demo.$procmux$621_Y.
Removed top 3 bits (of 6) from wire demo.$procmux$623_Y.
Removed top 5 bits (of 6) from wire demo.$procmux$627_Y.
Removed top 2 bits (of 6) from wire demo.$procmux$631_Y.
Removed top 2 bits (of 6) from wire demo.$procmux$635_Y.
Removed top 4 bits (of 6) from wire demo.$procmux$639_Y.
Removed top 2 bits (of 6) from wire demo.$procmux$642_Y.
Removed top 4 bits (of 6) from wire demo.$procmux$646_Y.
Removed top 2 bits (of 6) from wire demo.$procmux$649_Y.
Removed top 5 bits (of 6) from wire demo.$procmux$656_Y.
Removed top 5 bits (of 6) from wire demo.$procmux$679_Y.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module demo that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\param_bram_inst.$memrd$\param_memory$param_bram.v:92$161 ($memrd):
    Found 1 activation_patterns using ctrl signal \pb_rd_en.
    No candidates found.
  Analyzing resource sharing options for $techmap\cmd_bram_inst.$memrd$\cmd_memory$cmd_bram.v:51$24 ($memrd):
    Found 1 activation_patterns using ctrl signal \cb_rd_en.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
Using template $paramod$968c93632f950ce0f306709fa121c1e7a868940c\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~652 debug messages>

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module demo:
  creating $macc model for $add$demo.v:217$371 ($add).
  creating $macc model for $add$demo.v:272$375 ($add).
  creating $macc model for $add$demo.v:519$396 ($add).
  creating $macc model for $sub$demo.v:350$382 ($sub).
  creating $macc model for $sub$demo.v:369$386 ($sub).
  creating $macc model for $sub$demo.v:521$397 ($sub).
  creating $alu model for $macc $sub$demo.v:521$397.
  creating $alu model for $macc $sub$demo.v:369$386.
  creating $alu model for $macc $sub$demo.v:350$382.
  creating $alu model for $macc $add$demo.v:519$396.
  creating $alu model for $macc $add$demo.v:272$375.
  creating $alu model for $macc $add$demo.v:217$371.
  creating $alu model for $le$demo.v:215$370 ($le): new $alu
  creating $alu model for $le$demo.v:238$372 ($le): new $alu
  creating $alu model for $lt$demo.v:517$395 ($lt): new $alu
  creating $alu model for $lt$demo.v:642$398 ($lt): new $alu
  creating $alu cell for $lt$demo.v:642$398: $auto$alumacc.cc:474:replace_alu$757
  creating $alu cell for $lt$demo.v:517$395: $auto$alumacc.cc:474:replace_alu$768
  creating $alu cell for $le$demo.v:238$372: $auto$alumacc.cc:474:replace_alu$773
  creating $alu cell for $le$demo.v:215$370: $auto$alumacc.cc:474:replace_alu$786
  creating $alu cell for $add$demo.v:217$371: $auto$alumacc.cc:474:replace_alu$799
  creating $alu cell for $add$demo.v:272$375: $auto$alumacc.cc:474:replace_alu$802
  creating $alu cell for $add$demo.v:519$396: $auto$alumacc.cc:474:replace_alu$805
  creating $alu cell for $sub$demo.v:350$382: $auto$alumacc.cc:474:replace_alu$808
  creating $alu cell for $sub$demo.v:369$386: $auto$alumacc.cc:474:replace_alu$811
  creating $alu cell for $sub$demo.v:521$397: $auto$alumacc.cc:474:replace_alu$814
  created 10 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~3 debug messages>

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$797: { $auto$rtlil.cc:1832:Not$796 $auto$rtlil.cc:1835:ReduceAnd$790 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$760: { $auto$alumacc.cc:490:replace_alu$758 [0] $auto$alumacc.cc:490:replace_alu$758 [1] $auto$alumacc.cc:490:replace_alu$758 [2] $auto$alumacc.cc:490:replace_alu$758 [3] $auto$alumacc.cc:490:replace_alu$758 [4] $auto$alumacc.cc:490:replace_alu$758 [5] $auto$alumacc.cc:490:replace_alu$758 [6] $auto$alumacc.cc:490:replace_alu$758 [7] $auto$alumacc.cc:490:replace_alu$758 [8] $auto$alumacc.cc:490:replace_alu$758 [9] $auto$alumacc.cc:490:replace_alu$758 [10] $auto$alumacc.cc:490:replace_alu$758 [11] $auto$alumacc.cc:490:replace_alu$758 [12] $auto$alumacc.cc:490:replace_alu$758 [13] $auto$alumacc.cc:490:replace_alu$758 [14] $auto$alumacc.cc:490:replace_alu$758 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$776: { $auto$alumacc.cc:490:replace_alu$774 [0] $auto$alumacc.cc:490:replace_alu$774 [1] $auto$alumacc.cc:490:replace_alu$774 [2] $auto$alumacc.cc:490:replace_alu$774 [3] $auto$alumacc.cc:490:replace_alu$774 [4] $auto$alumacc.cc:490:replace_alu$774 [5] $auto$alumacc.cc:490:replace_alu$774 [6] $auto$alumacc.cc:490:replace_alu$774 [7] $auto$alumacc.cc:490:replace_alu$774 [8] $auto$alumacc.cc:490:replace_alu$774 [9] $auto$alumacc.cc:490:replace_alu$774 [10] $auto$alumacc.cc:490:replace_alu$774 [11] $auto$alumacc.cc:490:replace_alu$774 [12] $auto$alumacc.cc:490:replace_alu$774 [13] $auto$alumacc.cc:490:replace_alu$774 [14] $auto$alumacc.cc:490:replace_alu$774 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$789: { $auto$alumacc.cc:490:replace_alu$787 [0] $auto$alumacc.cc:490:replace_alu$787 [1] $auto$alumacc.cc:490:replace_alu$787 [2] $auto$alumacc.cc:490:replace_alu$787 [3] $auto$alumacc.cc:490:replace_alu$787 [4] $auto$alumacc.cc:490:replace_alu$787 [5] $auto$alumacc.cc:490:replace_alu$787 [6] $auto$alumacc.cc:490:replace_alu$787 [7] $auto$alumacc.cc:490:replace_alu$787 [8] $auto$alumacc.cc:490:replace_alu$787 [9] $auto$alumacc.cc:490:replace_alu$787 [10] $auto$alumacc.cc:490:replace_alu$787 [11] $auto$alumacc.cc:490:replace_alu$787 [12] $auto$alumacc.cc:490:replace_alu$787 [13] $auto$alumacc.cc:490:replace_alu$787 [14] $auto$alumacc.cc:490:replace_alu$787 [15] }
  Optimizing cells in module \demo.
Performed a total of 4 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking demo.state as FSM state register:
    Register has an initialization value.

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\cmd_bram_inst.$memrd$\cmd_memory$cmd_bram.v:51$24' in module `\demo': merged data $dff with rd enable to cell.
Checking cell `$techmap\param_bram_inst.$memrd$\param_memory$param_bram.v:92$161' in module `\demo': merged data $dff with rd enable to cell.

2.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 4 unused cells and 6 unused wires.
<suppressed ~5 debug messages>

2.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\cmd_bram_inst.cmd_memory' in module `\demo':
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:19$25 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:20$26 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:21$27 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:22$28 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:23$29 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:24$30 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:25$31 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:26$32 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:27$33 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:28$34 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:29$35 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:30$36 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:31$37 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:32$38 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:33$39 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:34$40 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:35$41 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:36$42 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:37$43 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:38$44 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:39$45 ($meminit)
  $techmap\cmd_bram_inst.$meminit$\cmd_memory$cmd_bram.v:40$46 ($meminit)
  $techmap\cmd_bram_inst.$memrd$\cmd_memory$cmd_bram.v:51$24 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\param_bram_inst.param_memory' in module `\demo':
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:15$162 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:16$163 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:17$164 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:18$165 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:19$166 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:20$167 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:21$168 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:22$169 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:23$170 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:24$171 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:25$172 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:26$173 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:27$174 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:28$175 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:29$176 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:30$177 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:31$178 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:32$179 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:33$180 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:34$181 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:35$182 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:36$183 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:37$184 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:38$185 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:39$186 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:40$187 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:41$188 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:42$189 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:43$190 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:44$191 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:45$192 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:46$193 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:47$194 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:48$195 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:49$196 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:50$197 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:51$198 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:52$199 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:53$200 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:54$201 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:55$202 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:56$203 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:57$204 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:58$205 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:59$206 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:60$207 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:61$208 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:62$209 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:63$210 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:64$211 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:65$212 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:66$213 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:67$214 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:68$215 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:69$216 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:70$217 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:71$218 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:72$219 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:73$220 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:74$221 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:75$222 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:76$223 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:77$224 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:78$225 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:79$226 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:80$227 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:81$228 ($meminit)
  $techmap\param_bram_inst.$meminit$\param_memory$param_bram.v:82$229 ($meminit)
  $techmap\param_bram_inst.$memrd$\param_memory$param_bram.v:92$161 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing demo.cmd_bram_inst.cmd_memory:
  Properties: ports=1 bits=176 rports=1 wports=0 dbits=8 abits=5 words=22
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=234 dwaste=8 bwaste=3920 waste=3920 efficiency=4
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3920 efficiency=4
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=490 dwaste=0 bwaste=3920 waste=3920 efficiency=4
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3920 efficiency=4
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1002 dwaste=0 bwaste=4008 waste=4008 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=4008 efficiency=2
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2026 dwaste=0 bwaste=4052 waste=4052 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 3 rules:
    Efficiency for rule 2.2: efficiency=2, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=4, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=4, cells=1, acells=1
    Selected rule 2.1 with efficiency 4.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: cmd_bram_inst.cmd_memory.0.0.0
Processing demo.param_bram_inst.param_memory:
  Properties: ports=1 bits=544 rports=1 wports=0 dbits=8 abits=7 words=68
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=188 dwaste=8 bwaste=3552 waste=3552 efficiency=13
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3552 efficiency=13
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=444 dwaste=0 bwaste=3552 waste=3552 efficiency=13
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3552 efficiency=13
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=956 dwaste=0 bwaste=3824 waste=3824 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3824 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1980 dwaste=0 bwaste=3960 waste=3960 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3960 efficiency=3
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=3, cells=4, acells=1
    Efficiency for rule 2.2: efficiency=6, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=13, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=13, cells=1, acells=1
    Selected rule 2.1 with efficiency 13.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: param_bram_inst.param_memory.0.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$32500c9c9885bd46240c2514c935ef74a90e3806\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$089b9b99851e728a1e276ca51bdd913daeed99f6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cdcfd745ab2ff147c12c11fe5b25913d471374c7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$530c014d1a6df50d01dca698c3c2e0bf7fe8b0ff\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~88 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~24 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 52 unused wires.
<suppressed ~1 debug messages>

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
    Consolidated identical input bits for $pmux cell $procmux$497:
      Old ports: A=14'00000000000000, B=98'00000000000110000000000000110000000000001000000000010000000000000000010000000000010011001000000000, Y=$procmux$497_Y
      New ports: A=5'00000, B=35'00110000110001001000000010010010000, Y={ $procmux$497_Y [9] $procmux$497_Y [4] $procmux$497_Y [2:0] }
      New connections: { $procmux$497_Y [13:10] $procmux$497_Y [8:5] $procmux$497_Y [3] } = { $procmux$497_Y [9] $procmux$497_Y [9] 7'0000000 }
    Consolidated identical input bits for $mux cell $procmux$612:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:455:run$736 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$736 [1]
      New connections: $auto$wreduce.cc:455:run$736 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$615:
      Old ports: A=4'1100, B={ 2'01 $auto$wreduce.cc:455:run$736 [1:0] }, Y=$auto$wreduce.cc:455:run$737 [3:0]
      New ports: A=3'100, B={ 1'0 $auto$wreduce.cc:455:run$736 [1:0] }, Y={ $auto$wreduce.cc:455:run$737 [3] $auto$wreduce.cc:455:run$737 [1:0] }
      New connections: $auto$wreduce.cc:455:run$737 [2] = 1'1
    Consolidated identical input bits for $mux cell $procmux$621:
      Old ports: A=3'011, B=3'101, Y=$auto$wreduce.cc:455:run$738 [2:0]
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:455:run$738 [2:1]
      New connections: $auto$wreduce.cc:455:run$738 [0] = 1'1
    Consolidated identical input bits for $mux cell $procmux$631:
      Old ports: A=4'1010, B=4'0110, Y=$auto$wreduce.cc:455:run$741 [3:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$741 [3:2]
      New connections: $auto$wreduce.cc:455:run$741 [1:0] = 2'10
    Consolidated identical input bits for $mux cell $procmux$635:
      Old ports: A=4'0111, B=4'1010, Y=$auto$wreduce.cc:455:run$742 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$742 [3] $auto$wreduce.cc:455:run$742 [0] }
      New connections: $auto$wreduce.cc:455:run$742 [2:1] = { $auto$wreduce.cc:455:run$742 [0] 1'1 }
    Consolidated identical input bits for $mux cell $procmux$639:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:455:run$743 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$743 [1]
      New connections: $auto$wreduce.cc:455:run$743 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$646:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:455:run$745 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$745 [1]
      New connections: $auto$wreduce.cc:455:run$745 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$651:
      Old ports: A={ 2'00 $auto$wreduce.cc:455:run$744 [3:0] }, B={ 2'00 $auto$wreduce.cc:455:run$746 [3:0] }, Y=$procmux$651_Y
      New ports: A=$auto$wreduce.cc:455:run$744 [3:0], B=$auto$wreduce.cc:455:run$746 [3:0], Y=$procmux$651_Y [3:0]
      New connections: $procmux$651_Y [5:4] = 2'00
  Optimizing cells in module \demo.
    Consolidated identical input bits for $mux cell $procmux$615:
      Old ports: A=3'100, B={ 1'0 $auto$wreduce.cc:455:run$736 [1:0] }, Y={ $auto$wreduce.cc:455:run$737 [3] $auto$wreduce.cc:455:run$737 [1:0] }
      New ports: A=2'10, B={ 1'0 $auto$wreduce.cc:455:run$736 [1] }, Y={ $auto$wreduce.cc:455:run$737 [3] $auto$wreduce.cc:455:run$737 [1] }
      New connections: $auto$wreduce.cc:455:run$737 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$642:
      Old ports: A={ 2'10 $auto$wreduce.cc:455:run$743 [1:0] }, B=4'0111, Y=$auto$wreduce.cc:455:run$744 [3:0]
      New ports: A={ 1'1 $auto$wreduce.cc:455:run$743 [1] 1'0 }, B=3'011, Y={ $auto$wreduce.cc:455:run$744 [3] $auto$wreduce.cc:455:run$744 [1:0] }
      New connections: $auto$wreduce.cc:455:run$744 [2] = $auto$wreduce.cc:455:run$744 [0]
    Consolidated identical input bits for $mux cell $procmux$649:
      Old ports: A={ 2'10 $auto$wreduce.cc:455:run$745 [1:0] }, B=4'0111, Y=$auto$wreduce.cc:455:run$746 [3:0]
      New ports: A={ 1'1 $auto$wreduce.cc:455:run$745 [1] 1'0 }, B=3'011, Y={ $auto$wreduce.cc:455:run$746 [3] $auto$wreduce.cc:455:run$746 [1:0] }
      New connections: $auto$wreduce.cc:455:run$746 [2] = $auto$wreduce.cc:455:run$746 [0]
  Optimizing cells in module \demo.
    Consolidated identical input bits for $mux cell $procmux$651:
      Old ports: A=$auto$wreduce.cc:455:run$744 [3:0], B=$auto$wreduce.cc:455:run$746 [3:0], Y=$procmux$651_Y [3:0]
      New ports: A={ $auto$wreduce.cc:455:run$744 [3] $auto$wreduce.cc:455:run$744 [1:0] }, B={ $auto$wreduce.cc:455:run$746 [3] $auto$wreduce.cc:455:run$746 [1:0] }, Y={ $procmux$651_Y [3] $procmux$651_Y [1:0] }
      New connections: $procmux$651_Y [2] = $procmux$651_Y [0]
  Optimizing cells in module \demo.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.29.16. Finished OPT passes. (There is nothing left to do.)

2.30. Executing TECHMAP pass (map to technology primitives).

2.30.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.30.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:446553370afc6c2aa6cc0b8f657b7f64b237ff7c$paramod$55f49a009a975a30a28fdd971adb6110903d4740\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=14\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=1\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~729 debug messages>

2.31. Executing ICE40_OPT pass (performing simple optimizations).

2.31.1. Running ICE40 specific optimizations.

2.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~662 debug messages>

2.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
<suppressed ~906 debug messages>
Removed a total of 302 cells.

2.31.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 145 unused cells and 600 unused wires.
<suppressed ~146 debug messages>

2.31.6. Rerunning OPT passes. (Removed registers in this run.)

2.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$757.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$757.BB [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$768.slice[0].carry: CO=\pb_rd_addr [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$773.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$757.BB [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$786.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$799.slice[0].carry: CO=\delay [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$802.slice[0].carry: CO=\cb_rd_addr [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$805.slice[0].carry: CO=\pb_rd_addr [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$808.slice[0].carry: CO=\pixel_bit_counter [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$811.slice[0].carry: CO=\bit_counter [0]
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$814.slice[0].carry: CO=\params_left [0]
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$799.slice[1].adder back to logic.
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$802.slice[1].adder back to logic.
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$805.slice[1].adder back to logic.
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$808.slice[1].adder back to logic.
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$811.slice[1].adder back to logic.
Mapping SB_LUT4 cell demo.$auto$alumacc.cc:474:replace_alu$814.slice[1].adder back to logic.

2.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~75 debug messages>

2.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.31.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

2.31.12. Rerunning OPT passes. (Removed registers in this run.)

2.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell demo.$auto$alumacc.cc:474:replace_alu$786.slice[1].carry: CO=$auto$alumacc.cc:474:replace_alu$757.BB [1]

2.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.31.18. Rerunning OPT passes. (Removed registers in this run.)

2.31.19. Running ICE40 specific optimizations.

2.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.31.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.31.24. Finished OPT passes. (There is nothing left to do.)

2.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module demo:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2295 to $_DFFE_PP_ for $0\state[5:0] [0] -> \state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2296 to $_DFFE_PP_ for $0\state[5:0] [1] -> \state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2297 to $_DFFE_PP_ for $0\state[5:0] [2] -> \state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2298 to $_DFFE_PP_ for $0\state[5:0] [3] -> \state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2299 to $_DFFE_PP_ for $0\state[5:0] [4] -> \state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2300 to $_DFFE_PP_ for $0\state[5:0] [5] -> \state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2301 to $_DFFE_PP_ for $0\delay[15:0] [0] -> \delay [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2302 to $_DFFE_PP_ for $0\delay[15:0] [1] -> \delay [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2303 to $_DFFE_PP_ for $0\delay[15:0] [2] -> \delay [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2304 to $_DFFE_PP_ for $0\delay[15:0] [3] -> \delay [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2305 to $_DFFE_PP_ for $0\delay[15:0] [4] -> \delay [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2306 to $_DFFE_PP_ for $0\delay[15:0] [5] -> \delay [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2307 to $_DFFE_PP_ for $0\delay[15:0] [6] -> \delay [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2308 to $_DFFE_PP_ for $0\delay[15:0] [7] -> \delay [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2309 to $_DFFE_PP_ for $0\delay[15:0] [8] -> \delay [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2310 to $_DFFE_PP_ for $0\delay[15:0] [9] -> \delay [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2311 to $_DFFE_PP_ for $0\delay[15:0] [10] -> \delay [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2312 to $_DFFE_PP_ for $0\delay[15:0] [11] -> \delay [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2313 to $_DFFE_PP_ for $0\delay[15:0] [12] -> \delay [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2314 to $_DFFE_PP_ for $0\delay[15:0] [13] -> \delay [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2315 to $_DFFE_PP_ for $0\delay[15:0] [14] -> \delay [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2316 to $_DFFE_PP_ for $0\delay[15:0] [15] -> \delay [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2317 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2318 to $_DFFE_PP_ for $0\dc[0:0] -> \dc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2319 to $_DFFE_PP_ for $0\mosi[0:0] -> \mosi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2320 to $_DFFE_PP_ for $0\cs[0:0] -> \cs.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2321 to $_DFFE_PP_ for $0\data[7:0] [0] -> \data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2322 to $_DFFE_PP_ for $0\data[7:0] [1] -> \data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2323 to $_DFFE_PP_ for $0\data[7:0] [2] -> \data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2324 to $_DFFE_PP_ for $0\data[7:0] [3] -> \data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2325 to $_DFFE_PP_ for $0\data[7:0] [4] -> \data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2326 to $_DFFE_PP_ for $0\data[7:0] [5] -> \data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2327 to $_DFFE_PP_ for $0\data[7:0] [6] -> \data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2328 to $_DFFE_PP_ for $0\data[7:0] [7] -> \data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2329 to $_DFFE_PP_ for $0\bit_counter[2:0] [0] -> \bit_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2330 to $_DFFE_PP_ for $0\bit_counter[2:0] [1] -> \bit_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2331 to $_DFFE_PP_ for $0\bit_counter[2:0] [2] -> \bit_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2332 to $_DFFE_PP_ for $0\pixel_data[15:0] [0] -> \pixel_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2333 to $_DFFE_PP_ for $0\pixel_data[15:0] [1] -> \pixel_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2334 to $_DFFE_PP_ for $0\pixel_data[15:0] [2] -> \pixel_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2335 to $_DFFE_PP_ for $0\pixel_data[15:0] [3] -> \pixel_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2336 to $_DFFE_PP_ for $0\pixel_data[15:0] [4] -> \pixel_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2337 to $_DFFE_PP_ for $0\pixel_data[15:0] [5] -> \pixel_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2338 to $_DFFE_PP_ for $0\pixel_data[15:0] [6] -> \pixel_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2339 to $_DFFE_PP_ for $0\pixel_data[15:0] [7] -> \pixel_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2340 to $_DFFE_PP_ for $0\pixel_data[15:0] [8] -> \pixel_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2341 to $_DFFE_PP_ for $0\pixel_data[15:0] [9] -> \pixel_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2342 to $_DFFE_PP_ for $0\pixel_data[15:0] [10] -> \pixel_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2343 to $_DFFE_PP_ for $0\pixel_data[15:0] [11] -> \pixel_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2344 to $_DFFE_PP_ for $0\pixel_data[15:0] [12] -> \pixel_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2345 to $_DFFE_PP_ for $0\pixel_data[15:0] [13] -> \pixel_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2346 to $_DFFE_PP_ for $0\pixel_data[15:0] [14] -> \pixel_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2347 to $_DFFE_PP_ for $0\pixel_data[15:0] [15] -> \pixel_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2348 to $_DFFE_PP_ for $0\pixel_bit_counter[3:0] [0] -> \pixel_bit_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2349 to $_DFFE_PP_ for $0\pixel_bit_counter[3:0] [1] -> \pixel_bit_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2350 to $_DFFE_PP_ for $0\pixel_bit_counter[3:0] [2] -> \pixel_bit_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2351 to $_DFFE_PP_ for $0\pixel_bit_counter[3:0] [3] -> \pixel_bit_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2352 to $_DFFE_PP_ for $0\cb_rd_en[0:0] -> \cb_rd_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2353 to $_DFFE_PP_ for $0\cb_rd_addr[4:0] [0] -> \cb_rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2354 to $_DFFE_PP_ for $0\cb_rd_addr[4:0] [1] -> \cb_rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2355 to $_DFFE_PP_ for $0\cb_rd_addr[4:0] [2] -> \cb_rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2356 to $_DFFE_PP_ for $0\cb_rd_addr[4:0] [3] -> \cb_rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2357 to $_DFFE_PP_ for $0\cb_rd_addr[4:0] [4] -> \cb_rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2358 to $_DFFE_PP_ for $0\pb_rd_en[0:0] -> \pb_rd_en.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2359 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [0] -> \pb_rd_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2360 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [1] -> \pb_rd_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2361 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [2] -> \pb_rd_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2362 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [3] -> \pb_rd_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2363 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [4] -> \pb_rd_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2364 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [5] -> \pb_rd_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2365 to $_DFFE_PP_ for $0\pb_rd_addr[6:0] [6] -> \pb_rd_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2366 to $_DFFE_PP_ for $0\params_left[13:0] [0] -> \params_left [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2367 to $_DFFE_PP_ for $0\params_left[13:0] [1] -> \params_left [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2368 to $_DFFE_PP_ for $0\params_left[13:0] [2] -> \params_left [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2369 to $_DFFE_PP_ for $0\params_left[13:0] [3] -> \params_left [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2370 to $_DFFE_PP_ for $0\params_left[13:0] [4] -> \params_left [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2371 to $_DFFE_PP_ for $0\params_left[13:0] [5] -> \params_left [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2372 to $_DFFE_PP_ for $0\params_left[13:0] [6] -> \params_left [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2373 to $_DFFE_PP_ for $0\params_left[13:0] [7] -> \params_left [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2374 to $_DFFE_PP_ for $0\params_left[13:0] [8] -> \params_left [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2375 to $_DFFE_PP_ for $0\params_left[13:0] [9] -> \params_left [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2376 to $_DFFE_PP_ for $0\params_left[13:0] [10] -> \params_left [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2377 to $_DFFE_PP_ for $0\params_left[13:0] [11] -> \params_left [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2378 to $_DFFE_PP_ for $0\params_left[13:0] [12] -> \params_left [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2379 to $_DFFE_PP_ for $0\params_left[13:0] [13] -> \params_left [13].

2.34. Executing TECHMAP pass (map to technology primitives).

2.34.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.34.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~88 debug messages>

2.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~316 debug messages>

2.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in demo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2380 (SB_DFF): \scl = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2300 (SB_DFFE): \state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2382 (SB_DFF): \param_bram_inst.valid_out = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2296 (SB_DFFE): \state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2297 (SB_DFFE): \state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2298 (SB_DFFE): \state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2299 (SB_DFFE): \state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2301 (SB_DFFE): \delay [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2302 (SB_DFFE): \delay [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFFE): \delay [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2304 (SB_DFFE): \delay [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2305 (SB_DFFE): \delay [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2306 (SB_DFFE): \delay [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2307 (SB_DFFE): \delay [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2295 (SB_DFFE): \state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFFE): \delay [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2310 (SB_DFFE): \delay [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2311 (SB_DFFE): \delay [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2312 (SB_DFFE): \delay [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2313 (SB_DFFE): \delay [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2314 (SB_DFFE): \delay [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2315 (SB_DFFE): \delay [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2316 (SB_DFFE): \delay [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFFE): \data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2318 (SB_DFFE): \dc = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2319 (SB_DFFE): \mosi = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFFE): \cs = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2317 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFFE): \data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFFE): \data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2309 (SB_DFFE): \delay [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFFE): \data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFFE): \data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFFE): \data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2328 (SB_DFFE): \data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2329 (SB_DFFE): \bit_counter [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFFE): \bit_counter [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2337 (SB_DFFE): \pixel_data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFFE): \bit_counter [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFFE): \pixel_data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2334 (SB_DFFE): \pixel_data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2335 (SB_DFFE): \pixel_data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2321 (SB_DFFE): \data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2336 (SB_DFFE): \pixel_data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2338 (SB_DFFE): \pixel_data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2339 (SB_DFFE): \pixel_data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2340 (SB_DFFE): \pixel_data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2341 (SB_DFFE): \pixel_data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2342 (SB_DFFE): \pixel_data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2343 (SB_DFFE): \pixel_data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2344 (SB_DFFE): \pixel_data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2345 (SB_DFFE): \pixel_data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2346 (SB_DFFE): \pixel_data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2347 (SB_DFFE): \pixel_data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2348 (SB_DFFE): \pixel_bit_counter [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2349 (SB_DFFE): \pixel_bit_counter [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2350 (SB_DFFE): \pixel_bit_counter [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2356 (SB_DFFE): \cb_rd_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2352 (SB_DFFE): \cb_rd_en = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2351 (SB_DFFE): \pixel_bit_counter [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2354 (SB_DFFE): \cb_rd_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFFE): \pixel_data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2355 (SB_DFFE): \cb_rd_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2381 (SB_DFF): \cmd_bram_inst.valid_out = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFFE): \params_left [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2357 (SB_DFFE): \cb_rd_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2360 (SB_DFFE): \pb_rd_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2361 (SB_DFFE): \pb_rd_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFFE): \pb_rd_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFFE): \pb_rd_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFFE): \pb_rd_addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2353 (SB_DFFE): \cb_rd_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFFE): \pb_rd_addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFFE): \params_left [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFFE): \params_left [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2369 (SB_DFFE): \params_left [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFFE): \params_left [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFFE): \params_left [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFFE): \params_left [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2359 (SB_DFFE): \pb_rd_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFFE): \params_left [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2375 (SB_DFFE): \params_left [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2376 (SB_DFFE): \params_left [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2377 (SB_DFFE): \params_left [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2378 (SB_DFFE): \params_left [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2379 (SB_DFFE): \params_left [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFFE): \params_left [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2358 (SB_DFFE): \pb_rd_en = 0

2.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in demo.

2.39. Executing ICE40_OPT pass (performing simple optimizations).

2.39.1. Running ICE40 specific optimizations.

2.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.
<suppressed ~91 debug messages>

2.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
<suppressed ~717 debug messages>
Removed a total of 239 cells.

2.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..
Removed 0 unused cells and 854 unused wires.
<suppressed ~1 debug messages>

2.39.6. Rerunning OPT passes. (Removed registers in this run.)

2.39.7. Running ICE40 specific optimizations.

2.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo.

2.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo'.
Removed a total of 0 cells.

2.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo..

2.39.12. Finished OPT passes. (There is nothing left to do.)

2.40. Executing TECHMAP pass (map to technology primitives).

2.40.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.40.2. Continuing TECHMAP pass.
No more expansions possible.

2.41. Executing ABC pass (technology mapping using ABC).

2.41.1. Extracting gate netlist of module `\demo' to `<abc-temp-dir>/input.blif'..
Extracted 775 gates and 910 wires to a netlist network with 133 inputs and 103 outputs.

2.41.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     164.
ABC: Participating nodes from both networks       =     379.
ABC: Participating nodes from the first network   =     165. (  65.74 % of nodes)
ABC: Participating nodes from the second network  =     214. (  85.26 % of nodes)
ABC: Node pairs (any polarity)                    =     165. (  65.74 % of names can be moved)
ABC: Node pairs (same polarity)                   =     140. (  55.78 % of names can be moved)
ABC: Total runtime =     0.17 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      496
ABC RESULTS:        internal signals:      674
ABC RESULTS:           input signals:      133
ABC RESULTS:          output signals:      103
Removing temp directory.
Removed 0 unused cells and 482 unused wires.

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
No more expansions possible.
<suppressed ~1018 debug messages>
Removed 0 unused cells and 496 unused wires.

2.43. Executing HIERARCHY pass (managing design hierarchy).

2.43.1. Analyzing design hierarchy..
Top module:  \demo

2.43.2. Analyzing design hierarchy..
Top module:  \demo
Removed 0 unused modules.

2.44. Printing statistics.

=== demo ===

   Number of wires:                290
   Number of wire bits:            577
   Number of public wires:          36
   Number of public wire bits:     144
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                468
     SB_CARRY                       87
     SB_DFF                          3
     SB_DFFE                        85
     SB_LUT4                       291
     SB_RAM40_4K                     2

2.45. Executing CHECK pass (checking for obvious problems).
checking module demo..
found and reported 0 problems.

2.46. Executing BLIF backend.

2.47. Executing JSON backend.

End of script. Logfile hash: 65c7acc806
CPU: user 7.96s system 1.18s, MEM: 81.55 MB total, 75.79 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 17% 6x techmap (1 sec), 15% 22x opt_expr (1 sec), ...
